name: Main

on:
  push:
    branches: [ main, master, features/auto-deploy ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: PNPM Setup
        uses: pnpm/action-setup@v2
        with:
          version: '10.x'

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get versions
        id: versions
        run: |
          echo "playwright=$(pnpm --silent version:get-playwright)" >> $GITHUB_OUTPUT
          echo "current=$(pnpm --silent version:get-current)" >> $GITHUB_OUTPUT

      - name: Build packages
        run: pnpm build

      - name: Install Playwright Browsers
        run: pnpm dlx playwright@${{ steps.versions.outputs.playwright }} install --with-deps

      - name: Run Playwright tests
        run: pnpm test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./*/**/playwright-report/
          retention-days: 30

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write         # to be able to publish a GitHub release
      issues: write           # to be able to comment on released issues
      pull-requests: write    # to be able to comment on released pull requests
      id-token: write         # to enable use of OIDC for npm provenance
      packages: write         # to be able to publish to GitHub Packages

    needs:
      - test
    steps:
      - name: PNPM Setup
        uses: pnpm/action-setup@v2
        with:
          version: '10.x'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }} # ${{ secrets.NPM_TOKEN }}
        run: pnpm dlx semantic-release
        # pnpm publish --filter @sand4rt/experimental-ct-web --access public --no-git-checks
